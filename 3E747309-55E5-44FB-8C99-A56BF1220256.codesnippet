<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>Jobs@Btn</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>/// 普通按钮
-(UIButton *)usrNameBtn{
    if(!_usrNameBtn){
        @jobs_weakify(self)
        _usrNameBtn = self.masonryBy(UIButton.jobsInit()
                                      .bgColorBy(JobsWhiteColor)
                                      .jobsResetImagePlacement(NSDirectionalRectEdgeLeading)
                                      .jobsResetImagePadding(1)
                                      .jobsResetBtnImage(JobsIMG(@"APPLY NOW"))
                                      .jobsResetBtnBgImage(JobsIMG(@"APPLY NOW"))
                                      .jobsResetBtnTitleCor(JobsWhiteColor)
                                      .jobsResetBtnTitleFont(UIFontWeightBoldSize(JobsWidth(12)))
                                      .jobsResetBtnTitle(JobsInternationalization(@"APPLY NOW"))
                                      .onClickBy(^(UIButton *x){
                                          JobsLog(@"");
                                      }).onLongPressGestureBy(^(id data){
                                          JobsLog(@"");
                                      }),^(MASConstraintMaker *_Nonnull make){
            make.top.equalTo(self.headIMGV);
            make.left.equalTo(self.headIMGV.mas_right).offset(JobsWidth(10));
            make.height.mas_equalTo(JobsWidth(16));
        });
        _usrNameBtn.makeBtnTitleByShowingType(UILabelShowingType_03);
    }return _usrNameBtn;
}
/// 普通文本按钮
-(BaseButton *)registerBtn{
    if(!_registerBtn){
        _registerBtn = BaseButton.initByTextModel(jobsMakeTextModel(^(__kindof UITextModel * _Nullable data) {
            data.text = JobsInternationalization(@"REGISTER");
            data.textCor = JobsCor(@"#C90000");
            data.font = bayonRegular(JobsWidth(15));
        }))
        .bgColorBy(JobsWhiteColor)
        .onClickBy(^(UIButton *x){
            JobsLog(@"");
        }).onLongPressGestureBy(^(id data){
            JobsLog(@"");
        }).setLayerBy((jobsMakeLocationModel(^(__kindof JobsLocationModel * _Nullable data) {
            data.layerCor = JobsCor(@"#C90000");
            data.jobsWidth = 1;
            data.cornerRadiusValue = JobsWidth(8);
        })));
    }return _registerBtn;
}
 /// 富文本按钮
 -(BaseButton *)applyNowBtn{
     if(!_applyNowBtn){
         @jobs_weakify(self)
         _applyNowBtn = BaseButton.initByAttributedString(self.richTextWithDataConfigMutArr(jobsMakeMutArr(^(__kindof NSMutableArray &lt;__kindof JobsRichTextConfig *&gt;* _Nullable data) {
             data.add(jobsMakeRichTextConfig(^(__kindof JobsRichTextConfig * _Nullable data1) {
                 @jobs_strongify(self)
                 data1.font = UIFontWeightRegularSize(14);
                 data1.textCor = JobsCor(@"#666666");
                 data1.targetString = self.richTextMutArr[0];
                 data1.paragraphStyle = self.jobsParagraphStyleCenter;
             }))
             .add(jobsMakeRichTextConfig(^(__kindof JobsRichTextConfig * _Nullable data1) {
                 @jobs_strongify(self)
                 data1.font = UIFontWeightRegularSize(14);
                 data1.textCor = JobsCor(@"#BA9B77");
                 data1.targetString = self.richTextMutArr[1];
                 data1.paragraphStyle = self.jobsParagraphStyleCenter;
             }))
             .add(jobsMakeRichTextConfig(^(__kindof JobsRichTextConfig * _Nullable data1) {
                 @jobs_strongify(self)
                 data1.font = UIFontWeightRegularSize(14);
                 data1.textCor = JobsCor(@"#666666");
                 data1.targetString = self.richTextMutArr[2];
                 data1.paragraphStyle = self.jobsParagraphStyleCenter;
             }));
         }))).bgColorBy(JobsWhiteColor)
             .jobsResetImagePlacement(NSDirectionalRectEdgeLeading)
             .jobsResetImagePadding(1)
             .jobsResetBtnImage(JobsIMG(@"APPLY NOW"))
             .jobsResetBtnBgImage(JobsIMG(@"APPLY NOW"))
             .jobsResetBtnTitleCor(JobsWhiteColor)
             .jobsResetBtnTitleFont(UIFontWeightBoldSize(JobsWidth(12)))
             .jobsResetBtnTitle(JobsInternationalization(@"APPLY NOW"))
             .onClickBy(^(UIButton *x){
                 @jobs_strongify(self)
                 x.selected = !x.selected;
                 if (self.objBlock) self.objBlock(x);
             }).onLongPressGestureBy(^(id data){
                 JobsLog(@"");
             });
     }return _applyNowBtn;
 }
/// SDWebImage按钮
-(UIButton *)mailBtn{
     if(!_mailBtn){
         @jobs_weakify(self)
         _mailBtn = BaseButton.jobsInit()
             .imageURL(@"".jobsUrl)
             .placeholderImage(JobsIMG(@"小狮子"))
             .options(SDWebImageRefreshCached)/// 强制刷新缓存
             .completed(^(UIImage * _Nullable image,
                          NSError * _Nullable error,
                          SDImageCacheType cacheType,
                          NSURL * _Nullable imageURL) {
                 if (error) {
                     JobsLog(@"图片加载失败: %@-%@", error,imageURL);
                 } else {
                     JobsLog(@"图片加载成功");
                 }
             }).onClickBy(^(UIButton *x){
                 @jobs_strongify(self)
                 if (self.objBlock) self.objBlock(x);
             }).onLongPressGestureBy(^(id data){
             JobsLog(@"");
         }).bgNormalLoad();
     }return _mailBtn;
 }
/// 倒计时按钮
-(UIButton *)countDownBtn{
    if (!_countDownBtn) {
        @jobs_weakify(self)
        _countDownBtn = UIButton.initByConfig(jobsMakeButtonTimerConfigModel(^(__kindof ButtonTimerConfigModel * _Nullable data) {
            /// 一些通用的设置
            data.count = 50;
            data.showTimeType = ShowTimeType_SS;// 时间显示风格
            data.countDownBtnType = TimerStyle_anticlockwise;// 时间方向
            data.cequenceForShowTitleRuningStrType = CequenceForShowTitleRuningStrType_tail;//
            data.labelShowingType = UILabelShowingType_01;//【换行模式】
            /// 计时器未开始【静态值】
            data.readyPlayValue = jobsMakeButtonTimerProcessValueModel(^(ButtonTimerProcessValueModel * _Nullable model) {
                model.layerBorderWidth = 1;
                model.layerCornerRadius = JobsWidth(18);
                model.bgCor = JobsClearColor;
                model.layerBorderCor = JobsClearColor;
                model.textCor = HEXCOLOR_ALPHA(0xAE8330, 1);
                model.text = Title9;
                model.font = UIFontWeightMediumSize(JobsWidth(14));
            });
            /// 计时器进行中【动态值】
            data.runningValue = jobsMakeButtonTimerProcessValueModel(^(ButtonTimerProcessValueModel * _Nullable model) {
                model.bgCor = JobsClearColor;
                model.text = JobsInternationalization(Title12);
                model.layerBorderCor = JobsClearColor;
                model.textCor = HEXCOLOR_ALPHA(0xAE8330, 1);
                model.font = UIFontWeightMediumSize(JobsWidth(14));
            });
            /// 计时器结束【静态值】
            data.endValue = jobsMakeButtonTimerProcessValueModel(^(ButtonTimerProcessValueModel * _Nullable model) {
                model.bgCor = JobsClearColor;
            });
        })).onClick(^(__kindof UIButton *x){
            @jobs_strongify(self)
            x.startTimer();//选择时机、触发启动
            if (self.objectBlock) self.objectBlock(x);
        }).onLongPressGesture(^(id data){
            NSLog(@"");
        }).heartBeat(^(id _Nullable data){
            if ([data isKindOfClass:TimerProcessModel.class]) {
                TimerProcessModel *model = (TimerProcessModel *)data;
                NSLog(@"❤️❤️❤️❤️❤️%f",model.data.anticlockwiseTime);
            }
        });
        [self addSubview:_countDownBtn];
        [_countDownBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.right.equalTo(self).offset(-JobsWidth(120));
            make.top.equalTo(self).offset(JobsWidth(8));
            make.bottom.equalTo(self).offset(-JobsWidth(8));
            make.width.mas_equalTo(JobsWidth(80));
        }];
    }return _countDownBtn;
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>3E747309-55E5-44FB-8C99-A56BF1220256</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>普通按钮/普通文本按钮/富文本按钮/SDWebImage按钮</string>
	<key>IDECodeSnippetTitle</key>
	<string>OC@按钮❤️</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
