<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>Jobs@JXCategoryView.Normal</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>#  JXCategoryView框架的使用

## 其他
```
/// 手动跳转到某个指定的页面
[self.categoryTitleView selectItemAtIndex:3];
```
## 准备工作
```
#if __has_include(&lt;JXCategoryView/JXCategoryView.h&gt;)
#import &lt;JXCategoryView/JXCategoryView.h&gt;
#else
#import "JXCategoryView.h"
#endif
```
## 图文结合
```
&lt;
JXCategoryTitleViewDataSource
,JXCategoryListContainerViewDelegate
,JXCategoryViewDelegate
&gt;
============================== 方式一 ============================== 
-(JXCategoryTitleView *)categoryView{
    if(!_categoryView){
        @jobs_weakify(self)
        _categoryView = self.view.addSubview(jobsMakeCategoryTitleView(^(JXCategoryTitleView * _Nullable view) {
            @jobs_strongify(self)
            view.byTitleSelectedColor(JobsRedColor)
                .byTitleColor(JobsGrayColor)
                .byTitleFont(UIFontWeightRegularSize(JobsWidth(10)))
                .byTitleSelectedFont(UIFontWeightRegularSize(JobsWidth(11)))
                .byTitles(self.titles)
                .byTitleColorGradientEnabled(YES)
                .byIndicators(jobsMakeMutArr(^(__kindof NSMutableArray &lt;JXCategoryIndicatorBackgroundView *&gt;* _Nullable arr) {
                    arr.add(jobsMakeCategoryIndicatorLineView(^(JXCategoryIndicatorLineView * _Nullable indicator) {
                        indicator.indicatorColor = HEXCOLOR(0xFFEABA);
                        indicator.indicatorHeight = JobsWidth(4);
                        indicator.indicatorWidthIncrement = JobsWidth(10);
                        indicator.verticalMargin = 0;
                    }));
                }))/// 跟随的指示器（二选一）
                .byIndicators(jobsMakeMutArr(^(__kindof NSMutableArray &lt;JXCategoryIndicatorBackgroundView *&gt;* _Nullable arr) {
                    arr.add(jobsMakeCategoryIndicatorBackgroundView(^(JXCategoryIndicatorBackgroundView * _Nullable bgView) {
                        bgView.indicatorHeight = JobsWidth(30);
                        bgView.indicatorWidth = JobsWidth(76);
                        bgView.indicatorColor = HEXCOLOR(0xFFEABA);
                        bgView.indicatorCornerRadius = JXCategoryViewAutomaticDimension;
                    }));
                }))/// 跟随的指示器（二选一）BackgroundView 椭圆形
                .byDefaultSelectedIndex(1)/// 默认从第二个开始显示
                .byCellSpacing(JobsWidth(-20))
                .byContentScrollView(self.listContainerView.scrollView)/// 关联cotentScrollView，关联之后才可以互相联动！！！
                .byDelegate(self)
                .byBgCor(JobsClearColor);
        })).setMasonryBy(^(MASConstraintMaker *_Nonnull make){
            @jobs_strongify(self)
            make.top.equalTo(self.gk_navigationBar.mas_bottom).offset(0);
            make.left.right.equalTo(self.view);
            make.height.mas_equalTo(listContainerViewDefaultOffset);
        }).on();
    }return _categoryView;
}
============================== 方式二 ============================== 
-(JXCategoryImageView *)categoryView{
    if (!_categoryView) {
        @jobs_weakify(self)
        _categoryView = self.view.addSubview(jobsMakeCategoryImageView(^(JXCategoryImageView * _Nullable view) {
            view.byImageNames(jobsMakeMutArr(^(__kindof NSMutableArray &lt;NSString *&gt;* _Nullable arr) {
                arr.add(@"彩票_已选择")
                    .add(@"电子_已选择")
                    .add(@"棋牌_已选择")
                    .add(@"全部游戏_已选择")
                    .add(@"体育_已选择")
                    .add(@"真人直播_已选择");
            }))
            .bySelectedImageNames(jobsMakeMutArr(^(__kindof NSMutableArray &lt;NSString *&gt;* _Nullable arr) {
                arr.add(@"彩票_已选择")
                    .add(@"电子_已选择")
                    .add(@"棋牌_已选择")
                    .add(@"全部游戏_已选择")
                    .add(@"体育_已选择")
                    .add(@"真人直播_已选择");
            }))
            .byImageInfoArray(jobsMakeMutArr(^(__kindof NSMutableArray &lt;NSString *&gt;* _Nullable arr) {
                arr.add(@"彩票_已选择")
                    .add(@"电子_已选择")
                    .add(@"棋牌_已选择")
                    .add(@"全部游戏_已选择")
                    .add(@"体育_已选择")
                    .add(@"真人直播_已选择");
            }))
            .bySelectedImageInfoArray(jobsMakeMutArr(^(__kindof NSMutableArray &lt;NSString *&gt;* _Nullable arr) {
                arr.add(@"彩票_已选择")
                    .add(@"电子_已选择")
                    .add(@"棋牌_已选择")
                    .add(@"全部游戏_已选择")
                    .add(@"体育_已选择")
                    .add(@"真人直播_已选择");
            }))
            .byImageSize(CGSizeMake(JobsWidth(30), JobsWidth(30)))
            .byImageCornerRadius(JobsWidth(8))
            .byImageZoomEnabled(YES)
            .byImageZoomScale(2)
            .byDefaultSelectedIndex(1)/// 默认从第二个开始显示
            .byCellSpacing(JobsWidth(-20))
            .byContentScrollView(self.listContainerView.scrollView)/// 关联cotentScrollView，关联之后才可以互相联动！！！
            .byIndicators(jobsMakeMutArr(^(__kindof NSMutableArray &lt;JXCategoryIndicatorLineView *&gt;* _Nullable arr) {
                arr.add(jobsMakeCategoryIndicatorLineView(^(JXCategoryIndicatorLineView * _Nullable view) {
                    view.indicatorColor = HEXCOLOR(0xFFEABA);
                    view.indicatorHeight = JobsWidth(4);
                    view.indicatorWidthIncrement = JobsWidth(10);
                    view.verticalMargin = 0;
                }));
            }))/// 二选一
            .byIndicators(jobsMakeMutArr(^(__kindof NSMutableArray * _Nullable arr) {
                arr.add(jobsMakeCategoryIndicatorBackgroundView(^(JXCategoryIndicatorBackgroundView * _Nullable view) {
                    view.indicatorHeight = JobsWidth(30);
                    view.indicatorWidth = JobsWidth(76);
                    view.indicatorColor = HEXCOLOR(0xFFEABA);
                    view.indicatorCornerRadius = JXCategoryViewAutomaticDimension;
                }));
            }))/// 二选一
            .byDelegate(self)
            .byBgCor(JobsClearColor);
        }))
        .setMasonryBy(^(MASConstraintMaker *_Nonnull make){
            @jobs_strongify(self)
            make.top.equalTo(self.gk_navigationBar.mas_bottom).offset(0);
            make.left.right.equalTo(self.view);
            make.height.mas_equalTo(listContainerViewDefaultOffset);
        }).on();
    }return _categoryView;
}
============================== 方式三 ==============================
-(JXCategoryDotView *)categoryView{
    if (!_categoryView) {
        @jobs_weakify(self)
        _categoryView = self.view.addSubview(jobsMakeCategoryDotView(^(JXCategoryDotView * _Nullable view) {
            view.byDotStates(jobsMakeMutArr(^(__kindof NSMutableArray &lt;NSNumber *&gt;* _Nullable arr) {
                arr.add(@YES)
                    .add(@NO)
                    .add(@NO)
                    .add(@NO)
                    .add(@NO)
                    .add(@NO);
            }))
            .byDotSize(CGSizeMake(JobsWidth(5), JobsWidth(5)))
            .byTitleSelectedColor(HEXCOLOR(0xAE8330))
            .byTitleColor(HEXCOLOR(0xC4C4C4))
            .byTitleFont(UIFontWeightBoldSize(JobsWidth(12)))
            .byTitleSelectedFont(UIFontWeightBoldSize(JobsWidth(14)))
            .byDefaultSelectedIndex(1)/// 默认从第二个开始显示
            .byTitleColorGradientEnabled(YES)
            .byTitles(self.titles)
            .byIndicators(jobsMakeMutArr(^(__kindof NSMutableArray * _Nullable arr) {
                arr.add(jobsMakeCategoryIndicatorLineView(^(JXCategoryIndicatorLineView * _Nullable view) {
                    view.indicatorColor = HEXCOLOR(0xFFEABA);
                    view.indicatorHeight = JobsWidth(4);
                    view.indicatorWidthIncrement = JobsWidth(10);
                    view.verticalMargin = 0;
                }));
            }))/// 二选一
            .byIndicators(jobsMakeMutArr(^(__kindof NSMutableArray * _Nullable arr) {
                arr.add(jobsMakeCategoryIndicatorBackgroundView(^(JXCategoryIndicatorBackgroundView * _Nullable view) {
                    view.indicatorHeight = JobsWidth(30);
                    view.indicatorWidth = JobsWidth(76);
                    view.indicatorColor = HEXCOLOR(0xFFEABA);
                    view.indicatorCornerRadius = JXCategoryViewAutomaticDimension;
                }));
            }))/// 二选一：BackgroundView 椭圆形
            .byContentScrollView(self.listContainerView.scrollView)/// 关联cotentScrollView，关联之后才可以互相联动！！！
            .byListContainer(self.listContainerView)
            .reloadDatasWithoutListContainer()
            .byDelegate(self)
            .byBgCor(HEXCOLOR(0xFCFBFB));
        })).setMasonryBy(^(MASConstraintMaker *_Nonnull make){
            @jobs_strongify(self)
            make.top.equalTo(self.gk_navigationBar.mas_bottom);
            make.left.right.equalTo(self.view);
            make.height.mas_equalTo(listContainerViewDefaultOffset);
        }).on();
    }return _categoryView;
}

- (void)categoryView:(JXCategoryBaseView *)categoryView
didSelectedItemAtIndex:(NSInteger)index {
    self.navigationController.interactivePopGestureRecognizer.enabled = (index == 0);
    //点击以后红点消除
    if ([self.dotStatesMutArr[index] boolValue]) {
        self.dotStatesMutArr[index] = @(NO);
        self.categoryTitleView.dotStates = jobsMakeMutArr(^(__kindof NSMutableArray &lt;NSNumber *&gt;* _Nullable arr) {
            arr.add(@YES)
                .add(@NO)
                .add(@NO)
                .add(@NO)
                .add(@NO)
                .add(@NO);
        });[categoryView reloadCellAtIndex:index];
    }
}
============================== 方式四 ==============================
-(JXCategoryNumberView *)categoryView{
    if (!_categoryView) {
        @jobs_weakify(self)
        _categoryView = self.view.addSubview(jobsMakeCategoryNumberView(^(JXCategoryNumberView * _Nullable view) {
            view.byNumberLabelOffset(CGPointMake(JobsWidth(5), JobsWidth(2)))
                .byCounts(jobsMakeMutArr(^(__kindof NSMutableArray &lt;NSNumber *&gt;* _Nullable arr) {
                    arr.add(@1)
                        .add(@1)
                        .add(@1)
                        .add(@1)
                        .add(@1)
                        .add(@1);
                }))
                /// 内部默认不会格式化数字，直接转成字符串显示。比如业务需要数字超过999显示999+，可以通过该block实现。
                .byNumberStringFormatterBlock(^NSString *(NSInteger number) {
                    if (number &gt; 999) {
                        return @"999+";
                    }return [NSString stringWithFormat:@"%ld", (long)number];
                })
                .byTitles(self.titles)
                .byTitleSelectedColor(HEXCOLOR(0xAE8330))
                .byTitleColor(HEXCOLOR(0xC4C4C4))
                .byTitleFont(UIFontWeightBoldSize(JobsWidth(12)))
                .byTitleSelectedFont(UIFontWeightBoldSize(JobsWidth(14)))
                .byDefaultSelectedIndex(1)/// 默认从第二个开始显示
                .byTitleColorGradientEnabled(YES)
                .byIndicators(jobsMakeMutArr(^(__kindof NSMutableArray * _Nullable arr) {
                    arr.add(jobsMakeCategoryIndicatorLineView(^(JXCategoryIndicatorLineView * _Nullable view) {
                        view.indicatorColor = HEXCOLOR(0xFFEABA);
                        view.indicatorHeight = JobsWidth(4);
                        view.indicatorWidthIncrement = JobsWidth(10);
                        view.verticalMargin = 0;
                    }));
                }))/// 二选一
                .byIndicators(jobsMakeMutArr(^(__kindof NSMutableArray * _Nullable arr) {
                    arr.add(jobsMakeCategoryIndicatorBackgroundView(^(JXCategoryIndicatorBackgroundView * _Nullable view) {
                        view.indicatorHeight = JobsWidth(30);
                        view.indicatorWidth = JobsWidth(76);
                        view.indicatorColor = HEXCOLOR(0xFFEABA);
                        view.indicatorCornerRadius = JXCategoryViewAutomaticDimension;
                    }));
                }))/// 二选一：BackgroundView 椭圆形
                .byContentScrollView(self.listContainerView.scrollView) /// 关联cotentScrollView，关联之后才可以互相联动！！！
                .byListContainer(self.listContainerView)
                .reloadDatasWithoutListContainer()
                .byDelegate(self)
                .byBgCor(HEXCOLOR(0xFCFBFB));
        })).setMasonryBy(^(MASConstraintMaker *_Nonnull make){
            @jobs_strongify(self)
            make.top.equalTo(self.gk_navigationBar.mas_bottom);
            make.left.right.equalTo(self.view);
            make.height.mas_equalTo(listContainerViewDefaultOffset);
        }).on();
    }return _categoryView;
}
==================================== 公共部分 ====================================
#ifndef listContainerViewDefaultOffset
#define listContainerViewDefaultOffset JobsWidth(50)
#endif
// UI
/// N 选 1
Prop_strong()JXCategoryTitleView *categoryView;/// 文字
Prop_strong()JXCategoryImageView *categoryView;/// 纯图
Prop_strong()JXCategoryDotView *categoryView;/// 右上角带红点
Prop_strong()JXCategoryNumberView *categoryView;/// 右上角带文字

Prop_strong()JXCategoryListContainerView *listContainerView;/// 此属性决定依附于此的viewController
/// Data
Prop_strong()NSMutableArray &lt;__kindof UIViewController&lt;JXCategoryListContentViewDelegate&gt; *&gt;*childVCMutArr;
Prop_copy()NSMutableArray &lt;__kindof NSString *&gt;*titles;
/// 此属性决定依附于此的viewController
-(JXCategoryListContainerView *)listContainerView{
    if (!_listContainerView) {
        _listContainerView = jobsMakeCategoryListContainerViewByCollectionViewStyle(self)
            .byDefaultSelectedIndex(1);/// 默认从第二个开始显示
        [self.view.addSubview(_listContainerView) mas_makeConstraints:^(MASConstraintMaker *make) {
//            make.edges.equalTo(self.view);
            make.top.equalTo(self.balanceView.mas_bottom).offset(listContainerViewDefaultOffset);
            make.left.right.bottom.equalTo(self.view);
        }];self.view.refresh();
        /// ❤️在需要的地方写❤️
        NSNumber *currentIndex = self.listContainerView.valueForKey(@"currentIndex");
        NSLog(@"滑动或者点击以后，改变控制器，得到的目前最新的index = %d",currentIndex.intValue);
    }return _listContainerView;
}

-(NSMutableArray&lt;__kindof UIViewController&lt;JXCategoryListContentViewDelegate&gt; *&gt; *)childVCMutArr{
    if(!_childVCMutArr){
        _childVCMutArr = jobsMakeMutArr(^(__kindof NSMutableArray &lt;__kindof UIViewController&lt;JXCategoryListContentViewDelegate&gt; *&gt;* _Nullable arr) {
            arr.add(FMPromoAllVC.new)
                .add(FMPromoNewComerVC.new)
                .add(FMPromoDailyVC.new)
                .add(FMPromoLimitedVC.new)
                .add(FMPromoOfferVC.new);
        });
    }return _childVCMutArr;
}

-(NSMutableArray&lt;__kindof NSString *&gt; *)titles{
    if(!_titles){
        _titles = jobsMakeMutArr(^(__kindof NSMutableArray &lt;NSString *&gt;* _Nullable arr) {
            arr.add(JobsInternationalization(@"ALL"))
                .add(JobsInternationalization(@"NEWCOMER"))
                .add(JobsInternationalization(@"DAILY"))
                .add(JobsInternationalization(@"LIMITED"))
                .add(JobsInternationalization(@"OFFER"));
        });
    }return _titles;
}
#pragma mark JXCategoryTitleViewDataSource
//// 如果将JXCategoryTitleView嵌套进UITableView的cell，每次重用的时候，JXCategoryTitleView进行reloadData时，会重新计算所有的title宽度。所以该应用场景，需要UITableView的cellModel缓存titles的文字宽度，再通过该代理方法返回给JXCategoryTitleView。
//// 如果实现了该方法就以该方法返回的宽度为准，不触发内部默认的文字宽度计算。
//- (CGFloat)categoryTitleView:(JXCategoryTitleView *)titleView
//               widthForTitle:(NSString *)title{
//
//    return 10;
//}
#pragma mark JXCategoryListContainerViewDelegate
/**
 返回list的数量

 @param listContainerView 列表的容器视图
 @return list的数量
 */
- (NSInteger)numberOfListsInlistContainerView:(JXCategoryListContainerView *)listContainerView{
    return self.titles.count;
}
/**
 根据index初始化一个对应列表实例，需要是遵从`JXCategoryListContentViewDelegate`协议的对象。
 如果列表是用自定义UIView封装的，就让自定义UIView遵从`JXCategoryListContentViewDelegate`协议，该方法返回自定义UIView即可。
 如果列表是用自定义UIViewController封装的，就让自定义UIViewController遵从`JXCategoryListContentViewDelegate`协议，该方法返回自定义UIViewController即可。

 @param listContainerView 列表的容器视图
 @param index 目标下标
 @return 遵从JXCategoryListContentViewDelegate协议的list实例
 */
- (id&lt;JXCategoryListContentViewDelegate&gt;)listContainerView:(JXCategoryListContainerView *)listContainerView
                                          initListForIndex:(NSInteger)index{
    return self.childVCMutArr[index];
}
#pragma mark JXCategoryViewDelegate
///【点击的结果】点击选中的情况才会调用该方法。传递didClickSelectedItemAt事件给listContainerView
- (void)categoryView:(JXCategoryBaseView *)categoryView
didClickSelectedItemAtIndex:(NSInteger)index {
    [self.listContainerView didClickSelectedItemAtIndex:index];
}
///【点击选中或者滚动选中的结果】点击选中或者滚动选中都会调用该方法。适用于只关心选中事件，不关心具体是点击还是滚动选中的。
- (void)categoryView:(JXCategoryBaseView *)categoryView
didSelectedItemAtIndex:(NSInteger)index {
    
}
///【滚动选中的结果】滚动选中的情况才会调用该方法
- (void)categoryView:(JXCategoryBaseView *)categoryView 
didScrollSelectedItemAtIndex:(NSInteger)index{
    
}
/// 传递scrolling事件给listContainerView，必须调用！！！
- (void)categoryView:(JXCategoryBaseView *)categoryView
scrollingFromLeftIndex:(NSInteger)leftIndex
        toRightIndex:(NSInteger)rightIndex
               ratio:(CGFloat)ratio {
    NSLog(@"");
//    [self.listContainerView scrollingFromLeftIndex:leftIndex
//                                      toRightIndex:rightIndex
//                                             ratio:ratio
//                                     selectedIndex:categoryView.selectedIndex];
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>3504973F-2170-47C1-BC7A-2CF5A1A78065</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>JXCategoryView框架的使用</string>
	<key>IDECodeSnippetTitle</key>
	<string>OC@创建JXCategoryView🇺🇸</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
