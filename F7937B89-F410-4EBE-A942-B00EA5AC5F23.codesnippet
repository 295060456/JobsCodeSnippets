<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>Jobs@YTKNetwork</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>#pragma mark —— DDNetworking网络请求
-(void)getBankcardBanklist:(jobsByIDBlock _Nullable)block{
    NSDictionary *parameters = @{
        @"address":@"",// 开户地址
        @"bankAccount":@"",// 银行账号
        @"bankId":@"",// 银行卡id
        @"realName":@"",// 持卡人姓名
    };
    RequestTool *config = RequestTool.new;
    config.languageType = self.currentLanguageType;
    [RequestTool setupPublicParameters:config];
    @jobs_weakify(self)
    DDNetworkingPrepare // 配置
    [DDNetworkingAPI requestApi:NSObject.bankcardBanklistGET.funcName
                     parameters:nil
                   successBlock:^(DDResponseModel *data) {
        @jobs_strongify(self)
        if (block) block(data);
    } failureBlock:^(id data) {
        [DDNetworkingAPI handleError:data];
    }];
}
#pragma mark —— YTK网络请求
/// 普通的单个请求
-(jobsByVoidBlock)loadCacheData{
    return ^(){
        GetCustomerContactApi *api = GetCustomerContactApi.initByParameters(nil);
        if ([api loadCacheWithError:nil]) {
            NSDictionary *json = api.responseJSONObject;
            NSLog(@"json = %@", json);
            // show cached data
        }

        api.animatingText = JobsInternationalization(@"正在加载");
        api.animatingView = self.view;

        [api startWithCompletionBlockWithSuccess:^(YTKBaseRequest *request) {
            /// 以下是我们需要的值
            JobsResponseModel *responseModel = JobsResponseModel.byData(request.responseObject);
            if(responseModel.code == HTTPResponseCodeSuccess){
                NSLog(@"update ui");
            }
        } failure:^(YTKBaseRequest *request) {
            NSLog(@"failed");
        }];
    };
}
/// 多请求の同步请求
-(jobsByVoidBlock)sendBatchRequest{
    return ^(){
        GetImageApi *a = GetImageApi.initByParameters(nil);
        GetImageApi *b = GetImageApi.initByParameters(nil);
        GetImageApi *c = GetImageApi.initByParameters(nil);
        GetUserInfoApi *d = GetUserInfoApi.initByParameters(nil);
        
        YTKBatchRequest *batchRequest = [YTKBatchRequest.alloc initWithRequestArray:@[a, b, c, d]];
        [batchRequest startWithCompletionBlockWithSuccess:^(YTKBatchRequest *batchRequest) {
            NSLog(@"succeed");
            NSArray *requests = batchRequest.requestArray;
            GetImageApi *a = (GetImageApi *)requests[0];
            GetImageApi *b = (GetImageApi *)requests[1];
            GetImageApi *c = (GetImageApi *)requests[2];
            GetUserInfoApi *user = (GetUserInfoApi *)requests[3];
            ///deal with requests result ...
            NSLog(@"%@, %@, %@, %@", a, b, c, user);
            
            /// 以下是我们需要的值
            a.responseObject;
            b.responseObject;
            c.responseObject;
            user.responseObject;
            
        } failure:^(YTKBatchRequest *batchRequest) {
            NSLog(@"failed");
        }];
    };
}
/// 多请求の链式请求。链式请求的结果集体现在&lt;YTKChainRequestDelegate&gt;
-(jobsByVoidBlock)sendChainRequest{
    @jobs_weakify(self)
    return ^(){
        @jobs_strongify(self)
        RegisterApi *reg = RegisterApi.initByParameters(nil);
        YTKChainRequest *chainReq = YTKChainRequest.new;
        [chainReq addRequest:reg
                    callback:^(YTKChainRequest *chainRequest,
                               YTKBaseRequest *baseRequest) {
            
            RegisterApi *result = (RegisterApi *)baseRequest;
            /// 在链式请求中，下一个请求的参数来源于上一个请求的结果
            GetUserInfoApi *api = GetUserInfoApi.initByParameters(@{@"KKK":result.userId});
            [chainRequest addRequest:api callback:nil];
        }];
        chainReq.delegate = self;
        [chainReq start];// start to send request
    };
}
#pragma mark —— YTKChainRequestDelegate
-(void)chainRequestFinished:(YTKChainRequest *)chainRequest{
    NSLog(@"all requests are done");
}

-(void)chainRequestFailed:(YTKChainRequest *)chainRequest
        failedBaseRequest:(YTKBaseRequest*)request{
    NSLog(@"some one of request is failed");
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>F7937B89-F410-4EBE-A942-B00EA5AC5F23</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>猿题库网络请求（示例）</string>
	<key>IDECodeSnippetTitle</key>
	<string>OC@猿题库网络请求（示例）</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
