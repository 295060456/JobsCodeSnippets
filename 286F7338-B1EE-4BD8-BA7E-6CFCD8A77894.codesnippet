<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>init.UICollectionViewCell</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>@synthesize viewModel = _viewModel;

- (instancetype)initWithFrame:(CGRect)frame{
    if (self = [super initWithFrame:frame]) {

    }return self;
}

-(void)layoutSubviews{
    [super layoutSubviews];
    JobsLock(self.size = [MSHomePopupView viewSizeWithModel:nil];)
    /// 内部指定圆切角
    [self appointCornerCutToCircleByRoundingCorners:UIRectCornerTopLeft | UIRectCornerTopRight
                                        cornerRadii:CGSizeMake(JobsWidth(8), JobsWidth(8))];
}
#pragma mark —— JobsDoorInputViewProtocol
-(UIViewModel *_Nullable)getViewModel{
    return self.viewModel;
}
#pragma mark —— BaseCellProtocol
+(instancetype)cellWithCollectionView:(nonnull UICollectionView *)collectionView
                         forIndexPath:(nonnull NSIndexPath *)indexPath{
    FMPromoCVCell *cell = JobsRegisterDequeueCollectionViewCell(FMPromoCVCell);
                             或者
    FMPromoCVCell *cell = (FMPromoCVCell *)[collectionView collectionViewCellClass:FMPromoCVCell.class forIndexPath:indexPath];
    if (!cell) {
        collectionView.registerCollectionViewCellClass(FMPromoCVCell.class,@"");
        cell = (FMPromoCVCell *)[collectionView collectionViewCellClass:FMPromoCVCell.class forIndexPath:indexPath];
    }
    // UICollectionViewCell 圆切角               
    cell.contentView.layerBy(jobsMakeLocationModel(^(__kindof JobsLocationModel * _Nullable model) {
        model.masksToBounds = YES;
        model.layerCor = RGBA_COLOR(255, 225, 144, 1);
        model.jobsWidth = JobsWidth(1);
        model.cornerRadiusValue = JobsWidth(8);
     }));
     
    cell.layerBy(jobsMakeLocationModel(^(__kindof JobsLocationModel * _Nullable model) {
        model.masksToBounds = YES;
        model.layerCor = RGBA_COLOR(255, 225, 144, 1);
        model.jobsWidth = JobsWidth(1);
        model.cornerRadiusValue = JobsWidth(8);
     }));
                             
    cell.indexPath = indexPath;
    
    return cell;
}
/// 具体由子类进行复写【数据定UI】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(JobsReturnCollectionViewCellByIDBlock _Nonnull)jobsRichElementsCollectionViewCellBy{
    @jobs_weakify(self)
    return ^__kindof UICollectionViewCell *_Nullable(UIViewModel __kindof *_Nullable model) {
        @jobs_strongify(self)

        return self;
    };
}
/// 具体由子类进行复写【数据尺寸】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGSize)cellSizeByModel:(UIViewModel *_Nullable)model{
    return [UILabel sizeWithText:model.textModel.text
                            font:model.textModel.font
                         maxSize:CGSizeMake(MAXFLOAT, MAXFLOAT)];
}
#pragma mark —— lazyLoad

@end
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>286F7338-B1EE-4BD8-BA7E-6CFCD8A77894</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>基于BaseCellProtocol的UICollectionViewCell创建</string>
	<key>IDECodeSnippetTitle</key>
	<string>UICollectionViewCell</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
