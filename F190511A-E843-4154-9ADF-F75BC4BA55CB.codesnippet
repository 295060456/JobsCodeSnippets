<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>Jobs@WebView</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>private lazy var web: BaseWebView = { [unowned self] in
        return BaseWebView()
            .byBgColor(.clear)
            .byAllowedHosts([])                  // 不限域
            .byOpenBlankInPlace(true)
            .byDisableSelectionAndCallout(false)
            .byUserAgentSuffixProvider { _ in
                // 按请求动态追加 UA 后缀；nil = 使用系统默认 UA。
                // 需要区分页面时在此 return "YourApp/1.0"
                return nil
            }
//            .byNormalizeMToWWW(false)               // ❗️关闭 m→www
//            .byForceHTTPSUpgrade(false)             // ❗️关闭 http→https
//            .bySafariFallbackOnHTTP(false)          // ❗️关闭 Safari 兜底
//            .byInjectRedirectSanitizerJS(false)     // 可关，避免干涉 H5 自己跳转
            /// URL 重写策略（默认不重写；这里保持关闭）
            .byURLRewriter { _ in
                // 例如要做 http→https 升级：检测 url.scheme == "http" 再返回新 URL
                // 现在返回 nil 表示不改写
                return nil
            }
            /// Safari 兜底（默认不开）；返回 true 即交给 Safari 打开
            .bySafariFallbackRule { _ in
                return false
            }
            /// 一键开导航栏（默认标题=webView.title，默认有返回键）
            .byNavBarEnabled(true)
            .byNavBarStyle { s in
                s.byHairlineHidden(false)
                 .byBackgroundColor(.systemBackground)
                 .byTitleAlignmentCenter(true)
            }
            /// 自定义返回键（想隐藏就：.byNavBarBackButtonProvider { nil }）
            .byNavBarBackButtonProvider {
                UIButton(type: .system)
                    .byBackgroundColor(.clear)
                    .byImage(UIImage(systemName: "chevron.left"), for: .normal)
                    .byTitle("返回", for: .normal)
                    .byTitleFont(.systemFont(ofSize: 16, weight: .medium))
                    .byTitleColor(.label, for: .normal)
                    .byContentEdgeInsets(.init(top: 6, left: 10, bottom: 6, right: 10))
                    .byTapSound("Sound.wav")
            }
            /// 返回行为：优先后退，否则关闭当前控制器
            .byNavBarOnBack { [weak self] in
                guard let self else { return }
                closeByResult("")
            }
            .byAddTo(view) { [unowned self] make in
                make.edges.equalToSuperview()
            }
            /// 以下是依据前端暴露的自定义方法进行的JS交互
            .registerMobileAction("navigateToHome") {  [weak self] body, reply in
                /// 跳转到首页
                self!.closeByResult("")
                reply(nil)
            }
            .registerMobileAction("getToken") {  [weak self] body, reply in

                reply(nil)
            }
            .registerMobileAction("navigateToSecurityCenter") {  [weak self] body, reply in
                /// 跳转福利中心
                reply(nil)
            }
            .registerMobileAction("navigateToLogin") {  [weak self] body, reply in
                /// 跳转到登录页
                reply(nil)
            }
            .registerMobileAction("navigateToDeposit") {  [weak self] body, reply in
                /// 跳转到充值页
                reply(nil)
            }
            .registerMobileAction("closeWebView") {  [weak self] body, reply in
                /// 关闭WebView
                reply(nil)
            }
            .registerMobileAction("showToast") {  [weak self] body, reply in
                /// 显示Toast
                JobsToast.show(
                    text: body.stringValue(for: "message") ?? "",
                    config: JobsToast.Config()
                        .byBgColor(.systemGreen.withAlphaComponent(0.9))
                        .byCornerRadius(12)
                )
                reply(nil)
            }
}()</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>F190511A-E843-4154-9ADF-F75BC4BA55CB</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>自定义WebView</string>
	<key>IDECodeSnippetTitle</key>
	<string>Swift@WebView</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
