<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>Jobs@GKNavBar</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import GKNavigationBarSwift

override func viewDidLoad() {
    super.viewDidLoad()
    jobsSetupGKNav(
        title: "Demo 列表",
        leftButton:UIButton.sys()
            .byFrame(CGRect(x: 0, y: 0, width: 32.w, height: 32.h))
            /// 按钮图片@图文关系
            .byImage("list.bullet".sysImg, for: .normal)
            .byImage("list.bullet".sysImg, for: .selected)
            /// 事件触发@点按
            .onTap { [weak self] sender in
                guard let self else { return }
                sender.isSelected.toggle()
                debugOnly {  // 仅 Debug 执行
                    JobsToast.show(
                        text: "点按了列表按钮",
                        config: JobsToast.Config()
                            .byBgColor(.systemGreen.withAlphaComponent(0.9))
                            .byCornerRadius(12)
                    )
                }
            }
            /// 事件触发@长按
            .onLongPress(minimumPressDuration: 0.8) { btn, gr in
                 if gr.state == .began {
                     btn.alpha = 0.6
                     print("长按开始 on \(btn)")
                 } else if gr.state == .ended || gr.state == .cancelled {
                     btn.alpha = 1.0
                     print("长按结束")
                 }
            },
        rightButtons: [
            UIButton.sys()
                /// 按钮图片@图文关系
                .byImage("moon.circle.fill".sysImg, for: .normal)
                .byImage("moon.circle.fill".sysImg, for: .selected)
                /// 事件触发@点按
                .onTap { [weak self] sender in
                    guard let self else { return }
                    sender.isSelected.toggle()
                    guard let ws = UIApplication.shared.connectedScenes.first as? UIWindowScene,
                          let win = ws.windows.first else { return }
                    win.overrideUserInterfaceStyle =
                        (win.overrideUserInterfaceStyle == .dark) ? .light : .dark
                    print("🌓 主题已切换 -&gt; \(win.overrideUserInterfaceStyle == .dark ? "Dark" : "Light")")
                },
            UIButton.sys()
                /// 按钮图片@图文关系
                .byImage("globe".sysImg, for: .normal)
                .byImage("globe".sysImg, for: .selected)
                /// 事件触发@点按
                .onTap { [weak self] sender in
                    guard let self else { return }
                    sender.isSelected.toggle()
                    print("🌐 切换语言 tapped（占位）")
                },
            UIButton.sys()
                /// 按钮图片@图文关系
                .byImage("stop.circle.fill".sysImg, for: .normal)
                .byImage("stop.circle.fill".sysImg, for: .selected)
                /// 事件触发@点按
                .onTap { [weak self] sender in
                    guard let self else { return }
                    sender.isSelected.toggle()
                    print("🛑 手动停止刷新")
                    isPullRefreshing = false
                    isLoadingMore    = false
                    tableView.pullDownStop()
                    tableView.pullUpStop()
                }
        ]
    )
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>3A187BE0-A2DF-45DC-B45A-366042DDBA3E</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Ruby</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>Swift@GKNavigationBarSwift的二次封装和使用</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
