<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>init.JobsTextField</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>-(JobsTextField *)textField_birthDay{
    if(!_textField_birthDay){
        @jobs_weakify(self)
        _textField_birthDay = self.scrollView.addSubview(makeJobsTextField(^(__kindof JobsTextField * _Nullable data) {
            @jobs_strongify(self)
            data.layoutSubviewsRectCorner = UIRectCornerAllCorners;
            data.layoutSubviewsRectCornerSize = CGSizeMake(JobsWidth(8), JobsWidth(8));
            data.byLeftViewByOutLineOffset(JobsWidth(4))
                .byLeftViewByTextFieldOffset(JobsWidth(4))
                .byRightViewByTextFieldOffset(JobsWidth(4))
                .byRightViewByOutLineOffset(JobsWidth(14))
                .byLeftView(BaseButton.jobsInit()
                            .jobsResetBtnBgImage(JobsIMG(@"üìÖ"))
                            .onClickBy(^(UIButton *x){
                                JobsLog(@"");
                            }).onLongPressGestureBy(^(id data){
                                JobsLog(@"");
                            }).bySize(CGSizeMake(JobsWidth(16), JobsWidth(16))))
                .byRightView(BaseButton.jobsInit()
                             .jobsResetBtnBgImage(JobsIMG(@"Âêë‰∏ãÁöÑÁÆ≠Â§¥"))
                             .onClickBy(^(UIButton *x){
                                 @jobs_strongify(self)
                                 self.popupParameter = nil;
                                 ShowView(self.calenderView);
                             }).onLongPressGestureBy(^(id data){
                                 JobsLog(@"");
                             }).bySize(CGSizeMake(JobsWidth(16), JobsWidth(16))))
                .byBgCor(JobsCor(@"#f7f7f7"))
                .JobsRichViewByModel2(nil)
                // ÁúüÂÆûÁöÑtextFieldÔºåËæìÂÖ•ÂõûË∞ÉÔºàÊØèÊ¨°ËæìÂÖ•ÁöÑÂ≠óÁ¨¶ÔºâÔºåÂ¶ÇÊûúË¶ÅÂΩìÂâçtextFieldÁöÑÂ≠óÁ¨¶ÔºåËØ∑ÂèñÂÄºtextField.text
                .JobsBlock1(^(id _Nullable data) {
                    JobsLog(@"ddf = %@",data);
                });
            data.realTextField
                .byReturnKeyType(UIReturnKeyDefault)
                .byKeyboardAppearance(UIKeyboardAppearanceDefault)
                .byKeyboardType(UIKeyboardTypePhonePad)
                .byLeftViewMode(UITextFieldViewModeNever)
                .byRightViewMode(UITextFieldViewModeNever)
                .byPlaceholder(JobsInternationalization(@"Pick a Date"))
                .byPlaceholderColor(JobsCor(@"#BBBBBB"))
                .byPlaceholderFont(pingFangTCRegular(15))
                .byAttributedPlaceholder(nil)
                .byTextCor(JobsCor(@"#788190"))
                .bySecureTextEntry(NO);
        })).setLayerBy(jobsMakeLocationModel(^(__kindof JobsLocationModel * _Nullable data) {
            data.layerCor = JobsCor(@"#BBBBBB");
            data.jobsWidth = 1;
            data.cornerRadiusValue = JobsWidth(8);
        })).setMasonryBy(^(MASConstraintMaker *make){
            @jobs_strongify(self)
            make.size.mas_equalTo(CGSizeMake(JobsWidth(346), JobsWidth(40)));
            make.top.equalTo(self.birthDayTitleLab.mas_bottom).offset(JobsWidth(10));
            make.left.equalTo(self.scrollView).offset(JobsWidth(19));
        }).on();
    }return _textField_birthDay;
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>D1F6C376-24B8-40C0-B35B-212830CEE1A4</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>ÂàõÂª∫JobsTextFieldÁõ∏ÂÖ≥Â≠êÁ±ª</string>
	<key>IDECodeSnippetTitle</key>
	<string>ËæìÂÖ•Ê°Ü@JobsTextField</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
